<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
	<class name="cc.natapp4.ddaig.domain.BesureProject">
		<id name="bpid" length="50">
			<!-- 设置主键产生器为uuid，则我们无需手动为持久化类的主键属性赋值，则hibernate会自动产生uuid码填充该属性及其在数据库所对应的字段 -->
			<!-- 设置主键产生器是assigned，是由于需要根据用户的uid来生成qrcode，因此需要手动创建uid -->
			<!-- 自动按照数字序号增加，无需手动维护，但逐渐字段必须是数值类型（int/long等） -->
			<generator class="uuid"></generator>
		</id>

		<property name="name" length="100"></property>
		<property name="description" length="500"></property>

		<many-to-one name="projectType" column="ptid"
			class="cc.natapp4.ddaig.domain.ProjectType" cascade="save-update"
			lazy="false">
		</many-to-one>

		<property name="state" length="20"></property>
		<property name="examinedTime" type="long"></property>
		<property name="commitTime" type="long"></property>
		<property name="updateNum" type="integer"></property>
		<property name="startTime" type="long"></property>
		<property name="endTime" type="long"></property>
		<property name="activityTotal" type="integer" ></property>


		<list name="receipts" cascade="all" lazy="true">
			<key column="pid"></key>
			<index column="index4bproject" type="integer"></index>
			<one-to-many class="cc.natapp4.ddaig.domain.Receipt4BesureProject" />
		</list>

		<many-to-one name="minusFirstLevel"
			class="cc.natapp4.ddaig.domain.cengji.MinusFirstLevel" column="mflid"
			cascade="save-update" lazy="false"></many-to-one>
		<many-to-one name="zeroLevel"
			class="cc.natapp4.ddaig.domain.cengji.ZeroLevel" column="zid"
			cascade="save-update" lazy="false"></many-to-one>
		<many-to-one name="firstLevel"
			class="cc.natapp4.ddaig.domain.cengji.FirstLevel" column="flid"
			cascade="save-update" lazy="false"></many-to-one>
		<many-to-one name="secondLevel"
			class="cc.natapp4.ddaig.domain.cengji.SecondLevel" column="scid"
			cascade="save-update" lazy="false"></many-to-one>
		<many-to-one name="thirdLevel"
			class="cc.natapp4.ddaig.domain.cengji.ThirdLevel" column="thid"
			cascade="save-update" lazy="false"></many-to-one>

		<property name="filePath" length="100"></property>
		<property name="laborCost" type="integer"></property>
		<property name="purchaseCost" type="float"></property>

		<!-- 
			★★★★★
			基于外键的一对一关联
			由于是基于外键的一对一关联，因此在配置关联关系的属性时除了要声明出当前类中名叫doingProject的属性
			是作为引用一对一关联表DoingProject的引用属性外，还要告诉Hiberant对方表应用本持久化类数据的引用属性是哪一个
			那就是通过 property-ref属性来指定。这相当重要★★★
			试想一下普通的一对多的配置方式是什么？是不是一定是基于某个容器（SET、List、MAP等）属性，而容器属性就是作为承接
			对方关联表数据的持久化类载体而声明的，而这里基于外键的一对一关系，对方作为从表的BesureProject中是通过<many-to-one>
			配合unique=true属性实现的从表一端的“唯一性”，而当前作为主表的BesureProject需要告知从表要到哪里获取主表数据，也就是
			通过property-ref
		 -->
		<one-to-one name="doingProject" cascade="save-update" 
			 class="cc.natapp4.ddaig.domain.DoingProject" 
			 lazy="false"> <!-- ★这里的lazy="false"不能省略，一对一默认懒加载吗？ -->
		</one-to-one>


	</class>
</hibernate-mapping>